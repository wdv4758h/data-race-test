#!/bin/bash
# This scripts builds a self-contained executable file for ThreadSanitizer.
# Usage:
#   ./mk-self-contained-tsan.sh /path/to/valgrind/installation resulting_binary

# Take the valgrind installation from here:
IN_DIR="$1"
# Put the result here:
OUT="$2"
# The files/dirs to take:
IN_FILES="bin lib"

rm -rf $OUT && touch $OUT && chmod +x $OUT || exit 1

# Create the header.
cat << 'EOF' >> $OUT || exit 1
#!/bin/bash
# This is a self-extracting executable of ThreadSanitizer.
# This file is autogenerated by mk-self-contained-tsan.sh.

# We extract the temporary files to $VALGRIND_EXTRACT_DIR/valgrind.XXXXXX
VALGRIND_EXTRACT_DIR=${VALGRIND_EXTRACT_DIR:-/tmp}
EXTRACT_DIR="$(mktemp -d $VALGRIND_EXTRACT_DIR/valgrind.XXXXXX)"

cleanup() {
  rm -rf $EXTRACT_DIR
}
# We will cleanup on exit.
trap cleanup EXIT

mkdir -p $EXTRACT_DIR
chmod +rwx $EXTRACT_DIR
EOF
# end of header

# Create the self-extractor

# Exclude unneeded binaries.
TAR_EXCLUDE="$TAR_EXCLUDE --exclude=*drd* \
                          --exclude=*exp-* \
                          --exclude=*none* \
                          --exclude=*lackey* \
                          --exclude=*massif* \
                          --exclude=*memcheck* \
                          --exclude=*helgrind* \
                          --exclude=*pkgconfig* \
                          --exclude=*callgrind* \
                          --exclude=*cg_* \
                          --exclude=*.a \
                          --exclude=*tsan-debug* \
                          --exclude=*cachegrind*"
# Create the running part.

cat << 'EOF' >> $OUT || exit 1
# Extract:
sed '1,/^__COMPRESSED_DATA_BELOW__$/d' $0 | tar xz -C $EXTRACT_DIR

# Run
echo Extracting ThreadSanitizer to $EXTRACT_DIR
export VALGRIND_LIB="$EXTRACT_DIR/lib/valgrind"
export VALGRIND_LIB_INNER="$EXTRACT_DIR/lib/valgrind"
$EXTRACT_DIR/bin/valgrind --tool=tsan "$@"
EXIT_STATUS=$?
cleanup # the trap above will handle the cleanup only if we are in bash 3.x
exit $EXIT_STATUS # make sure to return the exit code from valgrind.

__COMPRESSED_DATA_BELOW__
EOF

# Dump the compressed binary at the very end of the file.
tar zcvh -C $IN_DIR $TAR_EXCLUDE $IN_FILES  >> $OUT || exit 1

echo "File $OUT successfully created"
