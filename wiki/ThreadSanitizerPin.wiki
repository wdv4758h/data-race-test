#summary Variant of ThreadSanitizer based on PIN

[http://www.pintool.org PIN] is a well known binary translation system. 
We implemented a variant of ThreadSanitizer based on PIN.

*This is a prototype; not (yet) fully functional!*

If you want to try it, follow these steps: 

{{{
# Install PIN (www.pintool.org). 
#    We tested against pin-2.6-27887-gcc.4.0.0-ia32_intel64-linux.tar.gz
# Set `PIN_ROOT` to the PIN installation directory:
export PIN_ROOT=$HOME/pin-2.6-27887-gcc.4.0.0-ia32_intel64-linux
# Get ThreadSanitizer sources and unittests
svn co   http://data-race-test.googlecode.com/svn/trunk/tsan
svn co   http://data-race-test.googlecode.com/svn/trunk/unittest
svn co   http://data-race-test.googlecode.com/svn/trunk/dynamic_annotations
# Build unittests
(cd unittest && make)
# Build ThreadSanitizerPIN
cd tsan/pin
make deb
# Try it! 
$PIN_ROOT/pin -t `pwd`/ts_pin_deb.so -short_name -- ../../unittest/racecheck_unittest 301
# Done! 
}}} 

If you are lucky, you will get something like this: 
{{{
==26694== INFO: T1 has been created by T0. Use --announce-threads to see the creation stack.
==26694== INFO: T2 has been created by T0. Use --announce-threads to see the creation stack.
==26694== WARNING: Possible data race during write of size 4 at 0x63f7e0: {{{
==26694==    T2 (locks held: {L130}):
==26694==     #0  test301::Thread2() /tmp/pintest/unittest/racecheck_unittest.cc:7050
==26694==     #1  MyThread::ThreadBody(MyThread*) /tmp/pintest/unittest/thread_wrappers_pthread.h:325
==26694==     #2  start_thread /usr/grte/v1/lib64/libpthread.so.0
==26694==   Concurrent write(s) happened at (OR AFTER) these points:
==26694==    T1 (locks held: {L129}):
==26694==     #0  test301::Thread1() /tmp/pintest/unittest/racecheck_unittest.cc:7045
==26694==     #1  MyThread::ThreadBody(MyThread*) /tmp/pintest/unittest/thread_wrappers_pthread.h:325
==26694==     #2  start_thread /usr/grte/v1/lib64/libpthread.so.0
==26694==   Locks involved in this report (reporting last lock sites): {L129, L130}
==26694==    L129
==26694==     #0  __pthread_mutex_lock_internal /usr/grte/v1/lib64/libpthread.so.0
==26694==     #1  MutexLock::MutexLock(Mutex*) /tmp/pintest/unittest/thread_wrappers.h:277
==26694==     #2  test301::Thread1() /tmp/pintest/unittest/racecheck_unittest.cc:7044
==26694==     #3  MyThread::ThreadBody(MyThread*) /tmp/pintest/unittest/thread_wrappers_pthread.h:325
==26694==     #4  start_thread /usr/grte/v1/lib64/libpthread.so.0
==26694==    L130
==26694==     #0  __pthread_mutex_lock_internal /usr/grte/v1/lib64/libpthread.so.0
==26694==     #1  MutexLock::MutexLock(Mutex*) /tmp/pintest/unittest/thread_wrappers.h:277
==26694==     #2  test301::Thread2() /tmp/pintest/unittest/racecheck_unittest.cc:7049
==26694==     #3  MyThread::ThreadBody(MyThread*) /tmp/pintest/unittest/thread_wrappers_pthread.h:325
==26694==     #4  start_thread /usr/grte/v1/lib64/libpthread.so.0
==26694== }}}
}}}