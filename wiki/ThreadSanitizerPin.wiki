#summary Variant of ThreadSanitizer based on PIN

[http://www.pintool.org PIN] is a well known binary translation system. 
We implemented a variant of ThreadSanitizer based on PIN.

*This is a prototype; not (yet) fully functional!*

If you want to try it, follow these steps: 

{{{
# Install PIN (www.pintool.org). 
#    We tested against pin-2.6-27887-gcc.4.0.0-ia32_intel64-linux.tar.gz
# Set `PIN_ROOT` to the PIN installation directory:
export PIN_ROOT=$HOME/pin-2.6-27887-gcc.4.0.0-ia32_intel64-linux
# Get ThreadSanitizer sources and unittests
svn co   http://data-race-test.googlecode.com/svn/trunk drt
cd drt
# Build unittests
(cd unittest && make l -j)
# Build ThreadSanitizerPIN
cd tsan/pin
make l64d -j VALGRIND_ROOT= GTEST_ROOT= PIN_ROOT=$PIN_ROOT
# Try it! 
./tsan_pin.sh  ../unittest/bin/demo_tests-linux-amd64-O0 --gtest_filter='*Race*'
# Done! 
}}} 

If you are lucky, you will get something like this: 
{{{
[ RUN      ] DemoTests.RaceReportDemoTest
==25358== INFO: T1 has been created by T0. Use --announce-threads to see the creation stack.
==25358== INFO: T2 has been created by T0. Use --announce-threads to see the creation stack.
==25358== WARNING: Possible data race during write of size 4 at 0x643ae0: {{{
==25358==    T2 (locks held: {L5}):
==25358==     #0  RaceReportDemoTest::Thread2() /home/kcc/tmp/z/drt/unittest/demo_tests.cc:53
==25358==     #1  MyThread::ThreadBody(MyThread*) /home/kcc/tmp/z/drt/unittest/thread_wrappers_pthread.h:329
==25358==     #2  start_thread /usr/grte/v1/lib64/libpthread.so.0
==25358==   Concurrent write(s) happened at (OR AFTER) these points:
==25358==    T1 (locks held: {L4}):
==25358==     #0  RaceReportDemoTest::Thread1() /home/kcc/tmp/z/drt/unittest/demo_tests.cc:48
==25358==     #1  MyThread::ThreadBody(MyThread*) /home/kcc/tmp/z/drt/unittest/thread_wrappers_pthread.h:329
==25358==     #2  start_thread /usr/grte/v1/lib64/libpthread.so.0
==25358==   Locks involved in this report (reporting last lock sites): {L4, L5}
==25358==    L4
==25358==     #0  pthread_mutex_lock /usr/grte/v1/lib64/libpthread.so.0
==25358==     #1  Mutex::Lock() /home/kcc/tmp/z/drt/unittest/thread_wrappers_pthread.h:135
==25358==     #2  MutexLock::MutexLock(Mutex*) /home/kcc/tmp/z/drt/unittest/thread_wrappers.h:277
==25358==     #3  RaceReportDemoTest::Thread1() /home/kcc/tmp/z/drt/unittest/demo_tests.cc:47
==25358==     #4  MyThread::ThreadBody(MyThread*) /home/kcc/tmp/z/drt/unittest/thread_wrappers_pthread.h:329
==25358==     #5  start_thread /usr/grte/v1/lib64/libpthread.so.0
==25358==    L5
==25358==     #0  pthread_mutex_lock /usr/grte/v1/lib64/libpthread.so.0
==25358==     #1  Mutex::Lock() /home/kcc/tmp/z/drt/unittest/thread_wrappers_pthread.h:135
==25358==     #2  MutexLock::MutexLock(Mutex*) /home/kcc/tmp/z/drt/unittest/thread_wrappers.h:277
==25358==     #3  RaceReportDemoTest::Thread2() /home/kcc/tmp/z/drt/unittest/demo_tests.cc:52
==25358==     #4  MyThread::ThreadBody(MyThread*) /home/kcc/tmp/z/drt/unittest/thread_wrappers_pthread.h:329
==25358==     #5  start_thread /usr/grte/v1/lib64/libpthread.so.0
==25358== }}}
[       OK ] DemoTests.RaceReportDemoTest (678 ms)

}}}